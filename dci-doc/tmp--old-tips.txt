NOTE:
Sometimes syntax-generator appears to work the first time, then doesn't work when you run it again immediately afterward

Real fix
======

Copy syntaxGenerator.ts, syntaxGenerator.d.ts, and syntaxElement.ts *to* the official distro and then run jake run-syntax-generator *from the official distro*

OR
just copying those .generated files from from the official distro may be sufficient, then run:
jake run-syntax-generator

Also maybe helpful:
In Jakefile, set useBuiltCompiler to false
---


The .generated.ts files are not regenerated just by running `jake local`; it's necessary to run `jake run-syntax-generator`.

The run-syntax-generator task is a bit tricky because it relies on a working compiler in the built/local directory in order to do its job. This can result in a catch-22 where you've made a change to src/compiler/syntax/syntaxGenerator.ts that would resolve an error you're currently getting for a change you recently made to any of the other .ts files, but it's still trying to use the files you generated previously BEFORE it can run the run-syntax-generator task.

So when making changes to syntaxGenerator.ts or SyntaxGenerator.d.ts, always make those changes without changing any of the other .ts files, and run `jake run-syntax-generator` BEFORE making your other modifications and running `jake local`.


--- TODO - UPDATE THIS DOCUMENTATION - THE BELOW DOESN'T REALLY FIX IT, AS IS REVEALED BY RUNNING THE jake run-syntax-generator COMMAND AGAIN


If you end up in the catch-22 situation mentioned above, then you can try the following:

git checkout src/compiler/syntax/SyntaxGenerator.js
jake run-syntax-generator

RPOBLEM!
Running
jake run-syntax-generator
again here reveals this doesn't work

You may also need to overwrite the tsc.js in built/local with the one from bin/.